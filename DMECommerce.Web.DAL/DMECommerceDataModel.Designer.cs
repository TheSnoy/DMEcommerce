//------------------------------------------------------------------------------
// <auto-generated>
//    Ce code a été généré à partir d'un modèle.
//
//    Des modifications manuelles apportées à ce fichier peuvent conduire à un comportement inattendu de votre application.
//    Les modifications manuelles apportées à ce fichier sont remplacées si le code est régénéré.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.ComponentModel;
using System.Data.EntityClient;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Linq;
using System.Runtime.Serialization;
using System.Xml.Serialization;

[assembly: EdmSchemaAttribute()]
#region Métadonnées de relation EDM

[assembly: EdmRelationshipAttribute("db_DMEcommerceModel", "FK_Product_ToREFBrand", "REFBrand", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(DMECommerce.Web.DAL.REFBrand), "Product", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DMECommerce.Web.DAL.Product), true)]
[assembly: EdmRelationshipAttribute("db_DMEcommerceModel", "FK_Product_ToREFTaxType", "REFTaxType", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(DMECommerce.Web.DAL.REFTaxType), "Product", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DMECommerce.Web.DAL.Product), true)]

#endregion

namespace DMECommerce.Web.DAL
{
    #region Contextes
    
    /// <summary>
    /// Aucune documentation sur les métadonnées n'est disponible.
    /// </summary>
    public partial class db_DMEcommerceEntities1 : ObjectContext
    {
        #region Constructeurs
    
        /// <summary>
        /// Initialise un nouvel objet db_DMEcommerceEntities1 à l'aide de la chaîne de connexion trouvée dans la section 'db_DMEcommerceEntities1' du fichier de configuration d'application.
        /// </summary>
        public db_DMEcommerceEntities1() : base("name=db_DMEcommerceEntities1", "db_DMEcommerceEntities1")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialisez un nouvel objet db_DMEcommerceEntities1.
        /// </summary>
        public db_DMEcommerceEntities1(string connectionString) : base(connectionString, "db_DMEcommerceEntities1")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialisez un nouvel objet db_DMEcommerceEntities1.
        /// </summary>
        public db_DMEcommerceEntities1(EntityConnection connection) : base(connection, "db_DMEcommerceEntities1")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Méthodes partielles
    
        partial void OnContextCreated();
    
        #endregion
    
        #region Propriétés ObjectSet
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        public ObjectSet<Product> Product
        {
            get
            {
                if ((_Product == null))
                {
                    _Product = base.CreateObjectSet<Product>("Product");
                }
                return _Product;
            }
        }
        private ObjectSet<Product> _Product;
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        public ObjectSet<REFBrand> REFBrand
        {
            get
            {
                if ((_REFBrand == null))
                {
                    _REFBrand = base.CreateObjectSet<REFBrand>("REFBrand");
                }
                return _REFBrand;
            }
        }
        private ObjectSet<REFBrand> _REFBrand;
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        public ObjectSet<REFOrderStatus> REFOrderStatus
        {
            get
            {
                if ((_REFOrderStatus == null))
                {
                    _REFOrderStatus = base.CreateObjectSet<REFOrderStatus>("REFOrderStatus");
                }
                return _REFOrderStatus;
            }
        }
        private ObjectSet<REFOrderStatus> _REFOrderStatus;
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        public ObjectSet<REFTaxType> REFTaxType
        {
            get
            {
                if ((_REFTaxType == null))
                {
                    _REFTaxType = base.CreateObjectSet<REFTaxType>("REFTaxType");
                }
                return _REFTaxType;
            }
        }
        private ObjectSet<REFTaxType> _REFTaxType;

        #endregion

        #region Méthodes AddTo
    
        /// <summary>
        /// Méthode déconseillée pour ajouter un nouvel objet à l'EntitySet Product. Utilisez la méthode .Add de la propriété ObjectSet&lt;T&gt; associée à la place.
        /// </summary>
        public void AddToProduct(Product product)
        {
            base.AddObject("Product", product);
        }
    
        /// <summary>
        /// Méthode déconseillée pour ajouter un nouvel objet à l'EntitySet REFBrand. Utilisez la méthode .Add de la propriété ObjectSet&lt;T&gt; associée à la place.
        /// </summary>
        public void AddToREFBrand(REFBrand rEFBrand)
        {
            base.AddObject("REFBrand", rEFBrand);
        }
    
        /// <summary>
        /// Méthode déconseillée pour ajouter un nouvel objet à l'EntitySet REFOrderStatus. Utilisez la méthode .Add de la propriété ObjectSet&lt;T&gt; associée à la place.
        /// </summary>
        public void AddToREFOrderStatus(REFOrderStatus rEFOrderStatus)
        {
            base.AddObject("REFOrderStatus", rEFOrderStatus);
        }
    
        /// <summary>
        /// Méthode déconseillée pour ajouter un nouvel objet à l'EntitySet REFTaxType. Utilisez la méthode .Add de la propriété ObjectSet&lt;T&gt; associée à la place.
        /// </summary>
        public void AddToREFTaxType(REFTaxType rEFTaxType)
        {
            base.AddObject("REFTaxType", rEFTaxType);
        }

        #endregion

    }

    #endregion

    #region Entités
    
    /// <summary>
    /// Aucune documentation sur les métadonnées n'est disponible.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="db_DMEcommerceModel", Name="Product")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Product : EntityObject
    {
        #region Méthode de fabrique
    
        /// <summary>
        /// Créez un nouvel objet Product.
        /// </summary>
        /// <param name="productId">Valeur initiale de la propriété ProductId.</param>
        /// <param name="productName">Valeur initiale de la propriété ProductName.</param>
        /// <param name="priceRegular">Valeur initiale de la propriété PriceRegular.</param>
        /// <param name="productDescription">Valeur initiale de la propriété ProductDescription.</param>
        /// <param name="isInStock">Valeur initiale de la propriété IsInStock.</param>
        /// <param name="dateAdd">Valeur initiale de la propriété DateAdd.</param>
        /// <param name="dateLastUpdate">Valeur initiale de la propriété DateLastUpdate.</param>
        public static Product CreateProduct(global::System.Int32 productId, global::System.String productName, global::System.Decimal priceRegular, global::System.String productDescription, global::System.Boolean isInStock, global::System.DateTime dateAdd, global::System.DateTime dateLastUpdate)
        {
            Product product = new Product();
            product.ProductId = productId;
            product.ProductName = productName;
            product.PriceRegular = priceRegular;
            product.ProductDescription = productDescription;
            product.IsInStock = isInStock;
            product.DateAdd = dateAdd;
            product.DateLastUpdate = dateLastUpdate;
            return product;
        }

        #endregion

        #region Propriétés simples
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ProductId
        {
            get
            {
                return _ProductId;
            }
            set
            {
                if (_ProductId != value)
                {
                    OnProductIdChanging(value);
                    ReportPropertyChanging("ProductId");
                    _ProductId = StructuralObject.SetValidValue(value, "ProductId");
                    ReportPropertyChanged("ProductId");
                    OnProductIdChanged();
                }
            }
        }
        private global::System.Int32 _ProductId;
        partial void OnProductIdChanging(global::System.Int32 value);
        partial void OnProductIdChanged();
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ProductName
        {
            get
            {
                return _ProductName;
            }
            set
            {
                OnProductNameChanging(value);
                ReportPropertyChanging("ProductName");
                _ProductName = StructuralObject.SetValidValue(value, false, "ProductName");
                ReportPropertyChanged("ProductName");
                OnProductNameChanged();
            }
        }
        private global::System.String _ProductName;
        partial void OnProductNameChanging(global::System.String value);
        partial void OnProductNameChanged();
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal PriceRegular
        {
            get
            {
                return _PriceRegular;
            }
            set
            {
                OnPriceRegularChanging(value);
                ReportPropertyChanging("PriceRegular");
                _PriceRegular = StructuralObject.SetValidValue(value, "PriceRegular");
                ReportPropertyChanged("PriceRegular");
                OnPriceRegularChanged();
            }
        }
        private global::System.Decimal _PriceRegular;
        partial void OnPriceRegularChanging(global::System.Decimal value);
        partial void OnPriceRegularChanged();
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> PriceDiscount
        {
            get
            {
                return _PriceDiscount;
            }
            set
            {
                OnPriceDiscountChanging(value);
                ReportPropertyChanging("PriceDiscount");
                _PriceDiscount = StructuralObject.SetValidValue(value, "PriceDiscount");
                ReportPropertyChanged("PriceDiscount");
                OnPriceDiscountChanged();
            }
        }
        private Nullable<global::System.Decimal> _PriceDiscount;
        partial void OnPriceDiscountChanging(Nullable<global::System.Decimal> value);
        partial void OnPriceDiscountChanged();
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ProductDescription
        {
            get
            {
                return _ProductDescription;
            }
            set
            {
                OnProductDescriptionChanging(value);
                ReportPropertyChanging("ProductDescription");
                _ProductDescription = StructuralObject.SetValidValue(value, false, "ProductDescription");
                ReportPropertyChanged("ProductDescription");
                OnProductDescriptionChanged();
            }
        }
        private global::System.String _ProductDescription;
        partial void OnProductDescriptionChanging(global::System.String value);
        partial void OnProductDescriptionChanged();
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> BrandId
        {
            get
            {
                return _BrandId;
            }
            set
            {
                OnBrandIdChanging(value);
                ReportPropertyChanging("BrandId");
                _BrandId = StructuralObject.SetValidValue(value, "BrandId");
                ReportPropertyChanged("BrandId");
                OnBrandIdChanged();
            }
        }
        private Nullable<global::System.Int32> _BrandId;
        partial void OnBrandIdChanging(Nullable<global::System.Int32> value);
        partial void OnBrandIdChanged();
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String BarCode
        {
            get
            {
                return _BarCode;
            }
            set
            {
                OnBarCodeChanging(value);
                ReportPropertyChanging("BarCode");
                _BarCode = StructuralObject.SetValidValue(value, true, "BarCode");
                ReportPropertyChanged("BarCode");
                OnBarCodeChanged();
            }
        }
        private global::System.String _BarCode;
        partial void OnBarCodeChanging(global::System.String value);
        partial void OnBarCodeChanged();
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> TaxTypeId
        {
            get
            {
                return _TaxTypeId;
            }
            set
            {
                OnTaxTypeIdChanging(value);
                ReportPropertyChanging("TaxTypeId");
                _TaxTypeId = StructuralObject.SetValidValue(value, "TaxTypeId");
                ReportPropertyChanged("TaxTypeId");
                OnTaxTypeIdChanged();
            }
        }
        private Nullable<global::System.Int32> _TaxTypeId;
        partial void OnTaxTypeIdChanging(Nullable<global::System.Int32> value);
        partial void OnTaxTypeIdChanged();
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsInStock
        {
            get
            {
                return _IsInStock;
            }
            set
            {
                OnIsInStockChanging(value);
                ReportPropertyChanging("IsInStock");
                _IsInStock = StructuralObject.SetValidValue(value, "IsInStock");
                ReportPropertyChanged("IsInStock");
                OnIsInStockChanged();
            }
        }
        private global::System.Boolean _IsInStock;
        partial void OnIsInStockChanging(global::System.Boolean value);
        partial void OnIsInStockChanged();
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Double> MaxOrderQty
        {
            get
            {
                return _MaxOrderQty;
            }
            set
            {
                OnMaxOrderQtyChanging(value);
                ReportPropertyChanging("MaxOrderQty");
                _MaxOrderQty = StructuralObject.SetValidValue(value, "MaxOrderQty");
                ReportPropertyChanged("MaxOrderQty");
                OnMaxOrderQtyChanged();
            }
        }
        private Nullable<global::System.Double> _MaxOrderQty;
        partial void OnMaxOrderQtyChanging(Nullable<global::System.Double> value);
        partial void OnMaxOrderQtyChanged();
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime DateAdd
        {
            get
            {
                return _DateAdd;
            }
            set
            {
                OnDateAddChanging(value);
                ReportPropertyChanging("DateAdd");
                _DateAdd = StructuralObject.SetValidValue(value, "DateAdd");
                ReportPropertyChanged("DateAdd");
                OnDateAddChanged();
            }
        }
        private global::System.DateTime _DateAdd;
        partial void OnDateAddChanging(global::System.DateTime value);
        partial void OnDateAddChanged();
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime DateLastUpdate
        {
            get
            {
                return _DateLastUpdate;
            }
            set
            {
                OnDateLastUpdateChanging(value);
                ReportPropertyChanging("DateLastUpdate");
                _DateLastUpdate = StructuralObject.SetValidValue(value, "DateLastUpdate");
                ReportPropertyChanged("DateLastUpdate");
                OnDateLastUpdateChanged();
            }
        }
        private global::System.DateTime _DateLastUpdate;
        partial void OnDateLastUpdateChanging(global::System.DateTime value);
        partial void OnDateLastUpdateChanged();

        #endregion

        #region Propriétés de navigation
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("db_DMEcommerceModel", "FK_Product_ToREFBrand", "REFBrand")]
        public REFBrand REFBrand
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<REFBrand>("db_DMEcommerceModel.FK_Product_ToREFBrand", "REFBrand").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<REFBrand>("db_DMEcommerceModel.FK_Product_ToREFBrand", "REFBrand").Value = value;
            }
        }
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<REFBrand> REFBrandReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<REFBrand>("db_DMEcommerceModel.FK_Product_ToREFBrand", "REFBrand");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<REFBrand>("db_DMEcommerceModel.FK_Product_ToREFBrand", "REFBrand", value);
                }
            }
        }
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("db_DMEcommerceModel", "FK_Product_ToREFTaxType", "REFTaxType")]
        public REFTaxType REFTaxType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<REFTaxType>("db_DMEcommerceModel.FK_Product_ToREFTaxType", "REFTaxType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<REFTaxType>("db_DMEcommerceModel.FK_Product_ToREFTaxType", "REFTaxType").Value = value;
            }
        }
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<REFTaxType> REFTaxTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<REFTaxType>("db_DMEcommerceModel.FK_Product_ToREFTaxType", "REFTaxType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<REFTaxType>("db_DMEcommerceModel.FK_Product_ToREFTaxType", "REFTaxType", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// Aucune documentation sur les métadonnées n'est disponible.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="db_DMEcommerceModel", Name="REFBrand")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class REFBrand : EntityObject
    {
        #region Méthode de fabrique
    
        /// <summary>
        /// Créez un nouvel objet REFBrand.
        /// </summary>
        /// <param name="brandId">Valeur initiale de la propriété BrandId.</param>
        /// <param name="brandName">Valeur initiale de la propriété BrandName.</param>
        public static REFBrand CreateREFBrand(global::System.Int32 brandId, global::System.String brandName)
        {
            REFBrand rEFBrand = new REFBrand();
            rEFBrand.BrandId = brandId;
            rEFBrand.BrandName = brandName;
            return rEFBrand;
        }

        #endregion

        #region Propriétés simples
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 BrandId
        {
            get
            {
                return _BrandId;
            }
            set
            {
                if (_BrandId != value)
                {
                    OnBrandIdChanging(value);
                    ReportPropertyChanging("BrandId");
                    _BrandId = StructuralObject.SetValidValue(value, "BrandId");
                    ReportPropertyChanged("BrandId");
                    OnBrandIdChanged();
                }
            }
        }
        private global::System.Int32 _BrandId;
        partial void OnBrandIdChanging(global::System.Int32 value);
        partial void OnBrandIdChanged();
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String BrandName
        {
            get
            {
                return _BrandName;
            }
            set
            {
                OnBrandNameChanging(value);
                ReportPropertyChanging("BrandName");
                _BrandName = StructuralObject.SetValidValue(value, false, "BrandName");
                ReportPropertyChanged("BrandName");
                OnBrandNameChanged();
            }
        }
        private global::System.String _BrandName;
        partial void OnBrandNameChanging(global::System.String value);
        partial void OnBrandNameChanged();

        #endregion

        #region Propriétés de navigation
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("db_DMEcommerceModel", "FK_Product_ToREFBrand", "Product")]
        public EntityCollection<Product> Product
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Product>("db_DMEcommerceModel.FK_Product_ToREFBrand", "Product");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Product>("db_DMEcommerceModel.FK_Product_ToREFBrand", "Product", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// Aucune documentation sur les métadonnées n'est disponible.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="db_DMEcommerceModel", Name="REFOrderStatus")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class REFOrderStatus : EntityObject
    {
        #region Méthode de fabrique
    
        /// <summary>
        /// Créez un nouvel objet REFOrderStatus.
        /// </summary>
        /// <param name="orderStatusId">Valeur initiale de la propriété OrderStatusId.</param>
        /// <param name="orderStatusName">Valeur initiale de la propriété OrderStatusName.</param>
        public static REFOrderStatus CreateREFOrderStatus(global::System.Int32 orderStatusId, global::System.String orderStatusName)
        {
            REFOrderStatus rEFOrderStatus = new REFOrderStatus();
            rEFOrderStatus.OrderStatusId = orderStatusId;
            rEFOrderStatus.OrderStatusName = orderStatusName;
            return rEFOrderStatus;
        }

        #endregion

        #region Propriétés simples
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 OrderStatusId
        {
            get
            {
                return _OrderStatusId;
            }
            set
            {
                if (_OrderStatusId != value)
                {
                    OnOrderStatusIdChanging(value);
                    ReportPropertyChanging("OrderStatusId");
                    _OrderStatusId = StructuralObject.SetValidValue(value, "OrderStatusId");
                    ReportPropertyChanged("OrderStatusId");
                    OnOrderStatusIdChanged();
                }
            }
        }
        private global::System.Int32 _OrderStatusId;
        partial void OnOrderStatusIdChanging(global::System.Int32 value);
        partial void OnOrderStatusIdChanged();
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String OrderStatusName
        {
            get
            {
                return _OrderStatusName;
            }
            set
            {
                OnOrderStatusNameChanging(value);
                ReportPropertyChanging("OrderStatusName");
                _OrderStatusName = StructuralObject.SetValidValue(value, false, "OrderStatusName");
                ReportPropertyChanged("OrderStatusName");
                OnOrderStatusNameChanged();
            }
        }
        private global::System.String _OrderStatusName;
        partial void OnOrderStatusNameChanging(global::System.String value);
        partial void OnOrderStatusNameChanged();

        #endregion

    }
    
    /// <summary>
    /// Aucune documentation sur les métadonnées n'est disponible.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="db_DMEcommerceModel", Name="REFTaxType")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class REFTaxType : EntityObject
    {
        #region Méthode de fabrique
    
        /// <summary>
        /// Créez un nouvel objet REFTaxType.
        /// </summary>
        /// <param name="taxTypeId">Valeur initiale de la propriété TaxTypeId.</param>
        /// <param name="taxValue">Valeur initiale de la propriété TaxValue.</param>
        public static REFTaxType CreateREFTaxType(global::System.Int32 taxTypeId, global::System.Double taxValue)
        {
            REFTaxType rEFTaxType = new REFTaxType();
            rEFTaxType.TaxTypeId = taxTypeId;
            rEFTaxType.TaxValue = taxValue;
            return rEFTaxType;
        }

        #endregion

        #region Propriétés simples
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 TaxTypeId
        {
            get
            {
                return _TaxTypeId;
            }
            set
            {
                if (_TaxTypeId != value)
                {
                    OnTaxTypeIdChanging(value);
                    ReportPropertyChanging("TaxTypeId");
                    _TaxTypeId = StructuralObject.SetValidValue(value, "TaxTypeId");
                    ReportPropertyChanged("TaxTypeId");
                    OnTaxTypeIdChanged();
                }
            }
        }
        private global::System.Int32 _TaxTypeId;
        partial void OnTaxTypeIdChanging(global::System.Int32 value);
        partial void OnTaxTypeIdChanged();
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double TaxValue
        {
            get
            {
                return _TaxValue;
            }
            set
            {
                OnTaxValueChanging(value);
                ReportPropertyChanging("TaxValue");
                _TaxValue = StructuralObject.SetValidValue(value, "TaxValue");
                ReportPropertyChanged("TaxValue");
                OnTaxValueChanged();
            }
        }
        private global::System.Double _TaxValue;
        partial void OnTaxValueChanging(global::System.Double value);
        partial void OnTaxValueChanged();

        #endregion

        #region Propriétés de navigation
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("db_DMEcommerceModel", "FK_Product_ToREFTaxType", "Product")]
        public EntityCollection<Product> Product
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Product>("db_DMEcommerceModel.FK_Product_ToREFTaxType", "Product");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Product>("db_DMEcommerceModel.FK_Product_ToREFTaxType", "Product", value);
                }
            }
        }

        #endregion

    }

    #endregion

}
